plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

javafx {
    version = '21'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing']
}

dependencies {
	implementation 'io.github.mkpaz:atlantafx-base:2.0.1'
	implementation 'org.kordamp.ikonli:ikonli-core:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
	implementation 'org.kordamp.ikonli:ikonli-material2-pack:12.3.1'
}

ext {
   	// Main class (for manifest entry)
	mainModule = 'RRG'
	mainClassName = 'com.bm.rrgfx.Main'
}
application {
	mainModule = project.mainModule // name defined in module-info.java
	mainClass = project.mainClassName// mainClass is mandatory

	//applicationDefaultJvmArgs =  ["--add-exports", "javafx.base/com.sun.javafx.event=org.controlsfx.controls"]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = project.mainModule
        //jvmArgs = defaultValue: the arguments configured in the applicationDefaultJvmArgs property of the application extension
    }
	
   	addExtraDependencies("javafx")
      	
    //With the jpackage task you can create a platform-specific installer for your application
   	jpackage {
        jpackageHome = 'c:/workspace/tools/jdk-20.0.2+9'
        installerOptions = ['--win-per-user-install', '--win-dir-chooser']
        
        //*** PER DEBUG (fa partire l'exe con la console) ***
        //imageOptions += ['--win-console']
        
        //icon = project.appIco
        //vendor = project.vendor
    }
}